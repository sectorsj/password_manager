Documentation:

Процедура создания новой почты:
1. Есть ГлавныйЭкран
2. На ГлавныйЭкране есть НавигационноеМеню, и ЭкранЗаставки
3. В НавигационноеМеню есть пункты: Аккаунт, Настройки
4. В пункте "Аккаунт" есть кнопка "Вход".
   1. При нажатии на  кнопку "Вход" открывается "формаАвторизации"
      1. с двумя полями "Логин" и "Пароль"
      2. кнопка "Войти"
      3. кнопка "Зарегистрироваться"
   2. Если нажать на кнопку "Войти", то происходит вход:
      1. на ГлавномЭкране открывается Экран с 3мя вкладками:
         1. Вебсайты
         2. Почты
         3. Интернет подключения
   3. Если на "формаАвторизации" нажать кнопку "Зарегистрироваться"
      1. Открывается "формаРегистрации", в ней 4 поля и 1 кнопка:
         1. "Логин"
         2. "Почта"
         3. "Пароль"
         4. "Подтверждение пароля"
         5. кнопка "Зарегистрироваться"
      2. Если ввести в поля информацию и нажать на кнопку "Зарегистрироваться",
         1. происходит процедура регистрации нового пользователя,
         2. пользователь вносится в базу данных
         3. выводится уведомление об успешной регистрации пользователя
         4. формаРегистрации закрывается
         5. открывается формаАвторизации.
      3. В открывшейся формаАвторизации
         1. в поле "Логин" уже указан тот логин, который был создан при регистрации пользователя.
         2. пустое поле "Пароль"
         3. кнопка "Зарегистрироваться" (ее нужно убрать/скрыть)
         4. кнопка "Войти"
            1. Если нажать на кнопку "Войти", то:
               1. формаАвторизации закроется
               2. открывается ГлавномЭкран с 3мя вкладками:
                  1. вкладкаВебсайты
                  2. вкладкаПочты
                     1. во вкладкаПочты должна отобразиться почта указанная при регистрации
                  3. вкладкаИнтернетПодключения
Страницы (Pages):
SplashPanel это экран который должен быть по умолчанию,
    - UsersPage
    - CategoriesPage
    - WebsitesPage
    - EmailsPage
    - NetworkConnectionsPage
это вкладки одноименных экранов и они должны активироваться после успешной авторизации,
т.к. там будет привязка к таблице бд, с указанием нужного пользователя

1. Слой моделей (Model Layer):
    - Содержит классы, представляющие объекты предметной области (сущности).
    - Определяет структуру данных и связи между объектами.
    - Например, классы User, Website, Email, NetworkConnection и т.д.

2. Слой репозиториев (Repository Layer):
    - Отвечает за доступ к данным и их сохранение.
    - Предоставляет методы для выполнения операций CRUD (Create, Read, Update, Delete) над объектами моделей.
    - Абстрагирует детали работы с базой данных или другим хранилищем данных.
    - Например, интерфейсы UserRepository, WebsiteRepository, EmailRepository, NetworkConnectionRepository и их реализации.

3. Сервисный слой (Service Layer):
    - Содержит бизнес-логику приложения.
    - Координирует взаимодействие между контроллерами и репозиториями.
    - Реализует операции, которые выходят за рамки простых CRUD-операций репозиториев.
    - Например, классы UserService, WebsiteService, EmailService, NetworkConnectionService и т.д.

4. Слой контроллеров (Controller Layer):
    - Обрабатывает входящие запросы от пользовательского интерфейса.
    - Извлекает данные из запросов, передает их сервисному слою для обработки.
    - Получает результаты от сервисного слоя и подготавливает данные для отображения в пользовательском интерфейсе.
    - Например, классы AuthController, MenuController, ResourceController и т.д.

5. Слой пользовательского интерфейса (GUI Layer):
    - Отвечает за отображение данных пользователю и взаимодействие с ним.
    - Содержит классы, представляющие диалоговые окна, фреймы, панели и другие компоненты пользовательского интерфейса.
    - Получает данные от контроллеров и отображает их пользователю.
    - Например, классы MainFrame, RegistrationDialog, LoginDialog, WebsitesPanel, EmailsPanel, NetworkConnectionsPanel и т.д.


Слои могут взаимодействовать друг с другом следующим образом:
- GUI Layer        - вызывает методы Controller Layer для выполнения действий.
- Controller Layer - использует Service Layer для выполнения бизнес-логики и получения данных.
- Service Layer    - взаимодействует с Repository Layer для доступа к данным и их сохранения.
- Repository Layer - работает с Model Layer для представления данных.


На вкладках:
почты - таблица с х колонками:
	1. порядковый номер записи таблицы
	2. адрес электронной почты
	3. пароль (отображается в виде 4х звездочек)
	   в этой же колонке должно быть две иконки:
		1. Глаз - чтобы отобразить пароль
		2. Два Квадратика - обозначающие возможно скопировать пароль
	4. соль пароля (не отображается в таблице)
	5. категория пользователя (не отображается в таблице)
сетевыми подключения - таблица с х колонками:
	1. порядковый номер записи таблицы
	2. название соединения
	3. ipv4 адрес
	4. ipv6 адрес
	5. имя пользователя для подключения к данной сети
	6. пароль (отображается в виде 4х звездочек)
   	   в этой же колонке должно быть две иконки:
		1. Глаз - чтобы отобразить пароль
		2. Два Квадратика - обозначающие возможно скопировать пароль
	4. соль пароля (не отображается в таблице)
	5. категория пользователя (не отображается в таблице)
	7. описание подключения
сайты - таблица с х колонками:
	1. порядковый номер записи таблицы
	2. название сайта
	3. url адрес сайта
	4. имя пользователя, которым пользователь зарегистрировался на этом сайте
	5. почта пользователя
	6. пароль (отображается в виде 4х звездочек)
   	   в этой же колонке должно быть две иконки:
		1. Глаз - чтобы отобразить пароль
		2. Два Квадратика - обозначающие возможно скопировать пароль
	7. соль пароля (не отображается в таблице)
	8. категория пользователя (не отображается в таблице)
	7. описание сайта



