BUGS:
1. таблица emails:
- не сохраняются данные в поле encrypted_password
  // нужно чтобы в поле encrypted_password сохранялся зашифрованный пароль от сервера
  - пароль сохраняется в зашифрованном виде от сервера
2. таблица websites:
- не сохраняются данные в поле website_email
  TODO не обязательно чтобы в таблице было это поле,
      нужно, что бы в WebsitesTab получилось отобразить строкой адрес электронной почты созданного сайта,
      а не Id электронной почты
- не сохраняются данные в поле email_id
  TODO не обязательно чтобы в таблице было это поле,
      нужно, что бы в WebsitesTab получилось отобразить строкой адрес электронной почты созданного сайта,
      а не Id электронной почты
3. таблица network_connections:
- не сохраняются данные в поле email_id
  TODO не обязательно чтобы в таблице было это поле,
      нужно, что бы в NetworkConnectionsTab получилось отобразить строкой адрес электронной почты созданного подключения,
      а не Id электронной почты


02.07.25 BUGS:
1. таблица websites:
- не сохраняются данные в поле website_email:
  TODO не обязательно чтобы в таблице было это поле,
      нужно, что бы в WebsitesTab получилось отобразить строкой адрес электронной почты созданного сайта,
      а не Id электронной почты
- не сохраняются данные в поле email_id
  TODO не обязательно чтобы в таблице было это поле,
      нужно, что бы в WebsitesTab получилось отобразить строкой адрес электронной почты созданного сайта,
      а не Id электронной почты
2. таблица network_connections:
- не сохраняются данные в поле email_id
  TODO не обязательно чтобы в таблице было это поле,
      нужно, что бы в NetworkConnectionsTab получилось отобразить строкой адрес электронной почты созданного подключения,
      а не Id электронной почты

04.07.25 BUGS:
1. при создании аккаунта, в таблице emails поле email_description - null
  TODO в функцию (регистрации) create_account_with_user_nickname_and_email в поле email_description
      добавить значение по умолчанию "Почта созданная при регистрации аккаунта"
2. при создании аккаунта, в таблице emails поле category_id - null
  TODO в функцию (регистрации) create_account_with_user_nickname_and_email в поле category_id
      добавить значение по умолчанию 2, что соответствует categories.id = 2 - это "почты"
3. при создании нового сетевого подключения, в таблице emails поле category_id - null
  TODO в функцию (добавление нового подключения) create_network_connection_with_nickname_and_email в поле category_id
      добавить значение по умолчанию 3, что соответствует categories.id = 3 - это "сетевые подключения"
4. при создании нового вебсайта, в таблице emails поле category_id - null
  TODO в функцию (добавление нового вебсайта) create_website_with_nickname_and_email в поле category_id
      добавить значение по умолчанию 1, что соответствует categories.id = 1 - это "веб-сайты"


1) 06.07.25: v0.0.2 alpha-тест:
   Евгений Сафонов:
   при создании нового "сайта" можно ввести пароль от почты,
   без указания самой почты.
   вернее даже нужно ввести пароль, а почту не нужно.
   при создании нового "подключения" то же самое.

2) 07.07.25: v.0.0.2 alpha-тест:
   Дашенька
   при создании аккаунта в поле:
   - пароль 
   не хватает глазика, для удобства что пишешь

3) 07.07.25: v.0.0.2 alpha-тест:
   SectorSj
      1) В network_connections_tab:
         отсутствуют поля "никнейм", которые есть при их создании

      2) В websites_tab:
         отсутствует поле email_encrypted_password (пароль почты)

         Уточнить поля (возможно уже устранено, перепроверь в коде)

4) 07.07.25: v.0.0.2 alpha-тест:
   SectorSj
   При создании аккаунта секретная фраза не должна быть в виде звёздочек...
   Она должна полностью отображаться. (дубль п.2)

24.07.25 BUGS:
баги, выявленные в ходе alpha-теста приложения:

1.1. Отсутствие почты при вводе пароля в "Подключениях":
     Описание:
     В разделе "подключения" в приложении необходимо вводить только пароль,
     при этом поле для ввода почты отсутствует или не обязательно для заполнения.
     Это вызывает недоразумения, так как пароли должны быть привязаны к конкретным почтовым адресам.
  
     Решение:
     Обеспечить обязательное поле для ввода почты в соответствующих разделах,
     если это необходимо для функционала.

1.2. Отсутствие почты при вводе пароля в "Сайтах":
     Описание:
     В разделе "сайты" в приложении необходимо вводить только пароль,
     при этом поле для ввода почты отсутствует или не обязательно для заполнения.
     Это вызывает недоразумения, так как пароли должны быть привязаны к конкретным почтовым адресам.
  
     Решение:
     Обеспечить обязательное поле для ввода почты в соответствующих разделах,
     если это необходимо для функционала.

2. Отсутствие иконки глазика для отображения пароля:
   Описание:
   В тестах Дашеньки было отмечено, что в полях для ввода пароля не хватает иконки глазика,
   которая бы позволяла пользователю видеть введенный текст.
   Это улучшило бы удобство использования, особенно в случае с длинными паролями.
   
   Решение:
   Добавить иконку для отображения/скрытия пароля в формах для ввода паролей.

3.1. В разделе "Network Connections" отсутствуют поля "никнейм" и "email_encrypted_password":
     Описание:
     В "network_connections_tab" отсутствуют поля:
     - "никнейм" - для указания никнейма пользователя
     - "email_encrypted_password" - для вывода зашифрованного пароля от почты
     что должно быть доступно для обеспечения безопасности.
  
     Решение:
     Добавить в раздел недостающие поля для корректного отображения и использования данных.

3.2. В разделе "Websites" отсутствуют поля "никнейм" и "email_encrypted_password":
     Описание:
     В "websites_tab" отсутствуют поля:
     - "никнейм" - для указания никнейма пользователя
     - "email_encrypted_password" - для вывода зашифрованного пароля от почты
     что должно быть доступно для обеспечения безопасности.
  
     Решение:
     Добавить в раздел недостающие поля для корректного отображения и использования данных.

4. Секретная фраза не должна отображаться звездочками:
   Описание:
   При создании аккаунта секретная фраза отображается как звезды,
   что не соответствует предполагаемому поведению.
   Секретная фраза должна быть видимой для пользователя, чтобы он мог её проверять.

   Решение:
   Изменить отображение поля секретной фразы, чтобы она показывалась в исходном виде.

Эти баги требуют исправлений в коде, чтобы улучшить пользовательский интерфейс и взаимодействие с приложением.

=========================================================================

24.07.2025.1.1:
Отсутствие "обязательности" у поля "эл. почта", при том,
что поле "пароль эл почты" (обязательное) при создании "Сетевого Подключения":

Описание:
При создании нового "подключения" необходимо вводить:
- название подключения
- ник пользователя
- пароль сетевого подключения
- пароль электронной почты

Решение:
Обеспечить необходимы обязательные поля для создания нового сетевого подключения.

1. Название подключения: обязательное поле
Название подключения — это важная информация для пользователя,
чтобы он мог идентифицировать подключение среди других.
Это обязательно, и здесь все ясно.

2. Никнейм пользователя
Если nickname не задан, будет использоваться username.
Если username не задан, будет использоваться accountLogin.
Это логично для автозаполнения,
так как каждый из этих параметров представляет собой имя пользователя
на разных уровнях (никнейм, имя пользователя, логин).

3. IP-адреса (IPv4, IPv6)
Здесь три варианта:
Только IPv4.
Только IPv6.
IPv4 и IPv6.
Это гибкость для разных типов подключения, и важно обеспечить выбор,
чтобы пользователь мог настроить подключение в зависимости от доступных параметров.

4. Пароль сетевого подключения: обязательное поле
Пароль для подключения к сети необходим для обеспечения безопасности,
и это обязательное поле.

5. Почта (email)
Добавление checkbox "добавить новую почту":
Если checkbox включен, становятся доступными поля для ввода эл. почты и пароля эл. почты.
Если checkbox не включен, привязывается почта, указанная при создании аккаунта.
Логика выбора почты в зависимости от состояния checkbox дает гибкость пользователю,
позволяя как добавить новый email, так и использовать существующий.

6. Пароль электронной почты
Этот параметр работает только тогда, когда заполняется поле эл. почты.
Это важно для безопасности, так как пароль будет требоваться только в случае
использования новой почты для подключения.

7. Описание подключения: не обязательное поле
Это поле будет полезным для дополнительных пояснений.
Например, для определения типа подключения или других параметров.
Оно не обязательно, но полезно для организации данных.

------------------------------------------------------

Бизнес-логика:
1.Название подключения: обязательное поле
2.Никнейм пользователя: задать вопрос пользователю (при создании нового сетевого подключения):
    - если nickname не задан,
           задать nickname из username,
    - если username не задан,
           задать username из accountLogin.
3. IP-адреса (IPv4, IPv6): есть 3 варианта:
    Либо ipv4 без ipv6
    Либо ipv6 без ipv4
    Либо ipv4 и ipv6
4. Пароль сетевого подключения: обязательное поле
5. Checkbox "довить новую почту"
    Включен:
        - Электронная почта (email): указывается адрес новой эл. почты
        - Пароль эл почты: указывается новой пароль эл. почты
    НЕ включен:
        - Электронная почта (email): привязывается почта, указанная при создании аккаунта
        - Пароль почты: привязывается пароль почты, указанная при создании аккаунта
6. Описание подключения: не обязательное поле

Что нужно сделать на практике:
Форма для создания сетевого подключения:

Для каждого из полей обеспечим корректную валидацию:
- Название подключения: обязательное поле
- Никнейм:              задать автоматически, если не введен
- IP-адреса:            три варианта с радиокнопками
- Пароль подключения:   обязательное поле
- Эл. почта:            добавление нового email с чекбоксом
- Пароль почты:         зависит от того, заполнено ли поле почты
- Описание:             не обязательное

Логика формы:

Для почты и пароля почты включим скрытие/отображение полей
в зависимости от состояния чекбокса.

Привязка почты из аккаунта, если чекбокс не активен.

Интерфейс пользователя:
Обеспечить понятный UI с четкими подсказками для каждого из полей.
Например, сделать все обязательные поля с явными метками и проверками.

----------------------------------------
Обсуждение логики с помощью функци созадния нового сетевого подключения через БД.
(create_network_connection_with_nickname_and_email):

1. Никнейм пользователя:
Процедура уже обрабатывает создание и привязку никнейма.
Она проверяет, существует ли никнейм в базе данных, и если его нет — создает новый.
Это соответствует требованию, что если nickname не задан, то нужно задать его через username или accountLogin.

Что нужно изменить:

Мы можем добавить дополнительную логику для определения nickname,
если его не передали в параметры функции
(например, использовать p_username или p_accountLogin, если p_nickname пустое).

2. Email (почта):
Процедура проверяет, существует ли уже заданный email.

Если его нет, она добавляет новый в таблицу emails и привязывает его к пользователю через таблицу user_emails.
Это соответствует бизнес-логике, где почта может быть как новой, так и связанной с уже существующим аккаунтом.

Что нужно изменить:

Логика добавления нового email уже присутствует.

Однако нужно удостовериться, что если checkbox для добавления новой почты не выбран,
то можно привязать существующий email из аккаунта.

Это может потребовать добавления логики, которая будет использовать email,
привязанный к аккаунту пользователя
(например, если p_email_address пустое, привязать почту из аккаунта).

3. Пароль сетевого подключения и почтовый пароль:
Пароль подключения передается через параметр p_encrypted_password,
а для почты — через p_email_encrypted_password.
Оба этих пароля передаются в таблицы network_connections и emails.

Что нужно изменить:

Логика с паролем уже предусмотрена.
Однако важно уточнить, что если email не задан,
то пароль для почты не должен передаваться в таблицу emails.

4. IP-адреса (IPv4, IPv6):
Процедура уже поддерживает оба типа IP-адресов — IPv4 и IPv6.

Что нужно изменить:

В коде можно уточнить логику, чтобы не передавать пустые значения для IP-адресов, если они не указаны.
Возможно, стоит добавить дополнительную проверку на корректность формата IP-адресов.

5. Описание подключения:
Процедура также поддерживает передачу описания подключения через параметр p_network_connection_description.


Полный код обновленной процедуры `create_network_connection_with_nickname_email_and_ip`
с учетом всех изменений и дополнений:

CREATE OR REPLACE FUNCTION public.create_network_connection_with_nickname_email_and_ip(
    p_account_id bigint,                                            -- Идентификатор аккаунта для создания подключения
    p_user_id bigint,                                               -- Идентификатор пользователя для создания подключения
    p_category_id bigint,                                           -- Идентификатор категории для создания подключения
    p_nickname text,                                                -- Никнейм пользователя, который будет привязан к подключению
    p_encrypted_password text,                                      -- Зашифрованный пароль для сетевого подключения
    p_network_connection_name character varying,                    -- Название нового сетевого подключения
    p_ipv4 character varying DEFAULT NULL::character varying,       -- IP-адрес для подключения (IPv4)
    p_ipv6 character varying DEFAULT NULL::character varying,       -- IP-адрес для подключения (IPv6)
    p_network_connection_description text DEFAULT NULL::text,       -- Описание нового подключения
    p_email_address text DEFAULT NULL::text,                        -- Адрес почтового аккаунта (электронной почты)
    p_email_encrypted_password text DEFAULT NULL::text,             -- Пароль почтового аккаунта
    p_email_description text DEFAULT NULL::text                     -- Описание почтового аккаунта
)
RETURNS bigint
LANGUAGE plpgsql
AS $function$
-- Объявление локальных переменных
DECLARE
    nickname_id       BIGINT;   -- Для хранения идентификатора никнейма
    email_id          BIGINT;   -- Для хранения идентификатора почты
    new_connection_id BIGINT;   -- Для хранения идентификатора нового сетевого подключения
BEGIN
    -- 1. Никнейм (проверка и создание):
    -- Если p_nickname не задано (NULL или пустое), то:
        -- Проверяется наличие p_username (имя пользователя)
    -- Если оно есть, то p_nickname будет равно p_username
    -- Если p_username также не задано, то используется p_account_login (логин аккаунта)
    -- для заполнения p_nickname

    IF p_nickname IS NULL OR LENGTH(TRIM(p_nickname)) = 0 THEN
        IF p_username IS NOT NULL AND LENGTH(TRIM(p_username)) > 0 THEN
            p_nickname := p_username;
        ELSE
            p_nickname := p_account_login;  -- Если username не задан, используем accountLogin
        END IF;
    END IF;

    -- Проверка и добавление никнейма в таблицу:
        -- Производится поиск по таблице nicknames на наличие уже существующего nickname
        -- Если такой никнейм не найден, он добавляется в таблицу nicknames с привязкой к account_id и user_id.
        -- Возвращается id созданного/найденного никнейма и сохраняется в переменную nickname_id.

    SELECT id INTO nickname_id FROM nicknames WHERE nickname = p_nickname;
    IF nickname_id IS NULL THEN
        INSERT INTO nicknames (nickname, account_id, user_id)
        VALUES (p_nickname, p_account_id, p_user_id)
        RETURNING id INTO nickname_id;
    END IF;

    --  Привязка никнейма к пользователю:
        -- После того как nickname_id получен, он добавляется в таблицу user_nicknames
            -- для связывания никнейма с пользователем
        -- Если такое связывание уже существует, чтобы избежать ошибок
            -- Используется конструкция ON CONFLICT DO NOTHING
    
    INSERT INTO user_nicknames (user_id, nickname_id)
    VALUES (p_user_id, nickname_id)
    ON CONFLICT DO NOTHING;

    -- 2. Email
    -- Проверка и привязка email:
    -- Если p_email_address не передано или пустое, тогда процедура пытается привязать email
        -- который был указан при создании аккаунта (по p_account_id)

    IF p_email_address IS NULL OR LENGTH(TRIM(p_email_address)) = 0 THEN
        -- Привязать email, указанный при создании аккаунта (например, привязка к p_account_id)
        SELECT email_address INTO p_email_address FROM emails WHERE account_id = p_account_id LIMIT 1;
    END IF;


    --  Добавление нового email:
        -- Если email_address передано и оно не пустое, то сначала выполняется поиск по таблице emails
            -- чтобы проверить, существует ли уже такой email
        -- Если email не найден, создается новый запись в таблице emails с переданным:
            -- email_address
            -- p_email_encrypted_password
            -- и другими данными
        -- Возвращается id нового email, который сохраняется в переменную email_id

    IF p_email_address IS NOT NULL AND LENGTH(TRIM(p_email_address)) > 0 THEN
        SELECT id INTO email_id FROM emails WHERE email_address = p_email_address;
        IF email_id IS NULL THEN
            INSERT INTO emails (
                email_address,
                encrypted_password,
                account_id,
                user_id,
                category_id,
                email_description
            )
            VALUES (
                p_email_address,
                COALESCE(p_email_encrypted_password, ''),
                p_account_id,
                p_user_id,
                3,
                'почта создана при создании нового сетевого подключения'
            )
            RETURNING id INTO email_id;
        END IF;


        -- Привязка email к пользователю:
            -- Добавляется запись в таблицу user_emails для связывания email с пользователем
            -- Используется конструкция ON CONFLICT DO NOTHING
                -- для предотвращения дублирования

        INSERT INTO user_emails (user_id, email_id)
        VALUES (p_user_id, email_id)
        ON CONFLICT DO NOTHING;
    END IF;

    -- 3. Подключение
    -- Обработка IP-адресов
    -- Проверяются переданные IP-адреса
        -- Если они пустые или NULL, то они заменяются на NULL в переменных p_ipv4 и p_ipv6
    IF p_ipv4 IS NULL OR LENGTH(TRIM(p_ipv4)) = 0 THEN
        p_ipv4 := NULL;
    END IF;
    IF p_ipv6 IS NULL OR LENGTH(TRIM(p_ipv6)) = 0 THEN
        p_ipv6 := NULL;
    END IF;

    INSERT INTO network_connections (
        account_id,
        category_id,
        encrypted_password,
        network_connection_name,
        ipv4,
        ipv6,
        network_connection_description,
        user_id,
        nickname_id,
        email_id
    )
    VALUES (
        p_account_id,
        p_category_id,
        p_encrypted_password,
        p_network_connection_name,
        p_ipv4,
        p_ipv6,
        p_network_connection_description,
        p_user_id,
        nickname_id,
        email_id
    )
    RETURNING id INTO new_connection_id;

    RETURN new_connection_id;
END;
$function$;


Изменения и дополнения:

1. Никнейм:
   Проверяем
        Если p_nickname не передан или пуст,
        То пытаемся задать его через:
            - p_username
            или
            - p_account_login.

2. Email:
   - Обновлена логика для использования email,привязанного к аккаунту.
   Если p_email_address не задан.
   - При наличии email_address, процедура проверяет,
        существует ли такой email в базе данных и добавляет его, если он отсутствует.

3. Пароль почты:
   - Если email_address не задан, пароль почты не передается.
   - Если email_address задан, то передается и p_email_encrypted_password.

4. IP-адреса:
   - Логика для обработки IPv4 и IPv6:
   Если эти значения не заданы или пустые, они присваиваются `NULL`.

5. Описание подключения:
   - Поле p_network_connection_description остается необязательным, и передается как есть.

---

Теперь эта процедура должна корректно обрабатывать создание сетевого подключения,
следуя требованиям из бизнес-логики, включая обработку:
- никнейма
- email
- пароля почты
- IP-адресов:
            - ipv4
            - ipv6


24.07.2025.1.1:
Решение:
если чекбокс отключен и network_connection_email не передан — ищем первую почту пользователя (user_id);
если найдена — используем её и добавляем описание;
остальная логика остаётся прежней.

24.07.2025.002.1.1 - ✅ Решено

====================================================================

24.07.2025.1.2:
Отсутствие "обязательности" у поля "эл. почта", при том,
что поле "пароль эл почты" (обязательное) при создании нового "Вебсайта".

При создании нового "сайта" можно ввести пароль от почты,
без указания самой почты.

Решение:
Обеспечить необходимы обязательные поля для создания нового "Вебсайта".

1. Название Вебсайта: обязательное поле
Название Вебсайта — это важная информация для пользователя,
чтобы он мог идентифицировать сайт среди других.

2. URL сайта: обязательное поле
URL сайта - кретически важная часть данных о вебсайтах,
в т.ч. для перехода на сам сайт.

3. Никнейм пользователя на вебсайте:
Если nickname не задан, будет использоваться username.
Если username не задан, будет использоваться accountLogin.
Это логично для автозаполнения,
так как каждый из этих параметров представляет собой имя пользователя
на разных уровнях (никнейм, имя пользователя, логин).
Важно:
Нужно учесть что на сайтах, есть валидация такого плана:
- ник и почта не повторяются
- ник не должен повторяться
- почта не должна повторяться


4. Пароль от Вебсайта: обязательное поле
Пароль для Вебсайта необходим для обеспечения безопасности,
и это обязательное поле.

5. Почта (email)
Добавление checkbox "добавить новую почту":
Если checkbox включен, становятся доступными поля для ввода эл. почты и пароля эл. почты.
Если checkbox не включен, привязывается почта, указанная при создании аккаунта.
Логика выбора почты в зависимости от состояния checkbox дает гибкость пользователю,
позволяя как добавить новый email, так и использовать существующий.
(хорошо отработан, думаю стоит применить и в Вебсайтах)

6. Пароль электронной почты
Этот параметр работает только тогда, когда заполняется поле эл. почты.
Это важно для безопасности, так как пароль будет требоваться только в случае
использования новой почты для Вебсайта.

7. Описание Вебсайта: не обязательное поле
Это поле будет полезным для дополнительных пояснений.
Например, для определения профиля сайта или других параметров.
Оно не обязательно, но полезно для организации данных.

------------------------------------------------------

Бизнес-логика:
1. Название вебсайта: обязательное поле
2. URL вебсайта
3. Никнейм пользователя: задать вопрос пользователю (при создании нового вебсайта):
    - если nickname не задан,
           задать nickname из username,
    - если username не задан,
           задать username из accountLogin.
4. Пароль вебсайта: обязательное поле
5. Checkbox "довить новую почту"
    Включен:
        - Электронная почта (email): указывается адрес новой эл. почты
        - Пароль эл почты: указывается новой пароль эл. почты
    НЕ включен:
        - Электронная почта (email): привязывается почта, указанная при создании аккаунта
        - Пароль почты: привязывается пароль почты, указанная при создании аккаунта
6. Описание вебсайта: не обязательное поле


--------------------
1. Проверка уникальности никнейма и почты:
По Никнейму:
Думаю что:
- Один и тот же пользователь не должен иметь одинаковые ники.
- Два разных пользователя могут использовать один и тот же ник

По Эл. почте:
согласен, проверка должна быть глобальной.

Важно: При повторном никнейме, можно уведомить пользователя (всплывающей подсказкой)
что на данном сайте уже был зарегистрирован такой никнейм.

Отсюда следует что к проверке на уникальность нужно еще добавить URL вебсайта.
nickname + email_address + URL

2. Защита от ошибочных данных
Вроде как у меня уже в подключениях реализован механизм "чекбокса",
который скрывает поля эл. почты и пароля эл почты. Думаю на данном этапе можно в вебсайтах ограничиться пока им.

3. Автозаполнение fallback для nickname
ну у меня же есть сессия и есть токен, также ничего не стоить подтянуть p_account_login, user_name по user_id
чтобы показать пользователю какие значения будут подставлены. 
Предложение:
возможно стоит реализовать "Select поле" чтобы пользователь мог сразу и выбрать или добавить новый ник.

4. Подсказка при выключенном чекбоксе
да это хороший вариант.
Думаю будет достаточно отображать тект: 
"Создать и привязать новую почту к вашему аккаунту?"
при отключенном чекбоксе.
Предложение:
возможно стоит реализовать "Select поле" чтобы пользователь мог сразу и выбрать ранее созданную электронную почту.

5. Расширяемость системы 

Твои предложения отличные. Я их хочу реализовать, но после того как устраню баги из альфа теста.
Внес их в бэклог.

✅ A. 2FA / Мультифакторная аутентификация
Добавить поле:

sql
Copy code
is_2fa_enabled BOOLEAN
two_fa_secret TEXT

✅ B. Привязка к соцсетям
sql
Copy code
social_type ENUM ('google', 'facebook', 'apple')
social_user_id TEXT

✅ C. Привязка к файлам
Например, файл резервной копии, документ лицензии и т.п.

sql
Copy code
website_files table (
  id SERIAL,
  website_id BIGINT,
  file_name TEXT,
  file_url TEXT
)

✅ D. Шаблоны сайтов
Можно заранее подготовить набор популярных сайтов (Google, GitHub, Steam и т.д.),
и предзаполнить поля — это ускорит добавление нового сайта.


-----------------------------------------

Несколько существенных отличий между `NetworkConnections` и `Websites`, которые стоит учесть:

### 1. **Данные, связанные с сетевым подключением и вебсайтом**
   - **NetworkConnections** — сетевое подключение связано с элементами инфраструктуры,
                              такими как IP-адреса (IPv4/IPv6), пароли для подключения и т. д.
                              Оно также может включать в себя информацию о сервисах и устройствах,
                              которые используют эти подключения.
   - **Websites** — вебсайт связан с URL, описанием вебсайта, никнеймами и данными электронной почты,
                    специфичными для сайта.
                    Здесь важна уникальность URL, а также возможное использование электронной почты
                    для связи с вебсайтом.

### 2. **Уникальность данных**
    **NetworkConnections**:
     - Уникальность в основном определяется с точки зрения **сетевого подключения** и паролей.
     - Здесь также проверяется уникальность никнеймов, но чаще всего они связаны с конкретными сервисами
       или устройствами.
     - Адреса IP (IPv4 и IPv6) важны для идентификации подключения.
    **Websites**:
     - Проверка уникальности связана не только с никнеймами и почтами, но также с **URL** вебсайта.
       Это ключевая отличительная особенность.
     - Никнеймы и электронная почта также могут быть уникальными в рамках аккаунта или пользователя,
       но на вебсайтах чаще важна их связь с конкретным сайтом и его URL.

### 3. **Информация о пароле**
    **NetworkConnections**:
     - Сетевое подключение обязательно включает информацию:
            - о пароле для подключения
            - о пароле для электронной почты, если это нужно для работы с сервисом
    **Websites**:
     - Вебсайты тоже требуют паролей, но они могут быть связаны с:
        - логинами пользователя на сайте
        - паролем почты, если она привязана к вебсайту.
       Пароль для вебсайта важен для безопасности, а также для защиты учетной записи на сайте.

### 4. **Механизм создания**:
    **NetworkConnections**:
     - Включает в себя дополнительную логику для работы с **сетевыми сервисами**,
       например:
       - создание сетевых подключений
       - проверка сетевых подключений
       - управление состоянием сетевых подключений
    **Websites**:
     - Здесь акцент на **веб-сервисах** и **онлайн-ресурсах**.
       Создание вебсайта включает в себя работу с:
       - URL,
       - уникальностью
       - поиском почты для регистрации

### 5. **Типы данных и их обработка**:
    **NetworkConnections**:
    Включают в себя:
        - **пароли для сетевых подключений** (должны быть зашифрованы)
        - **IP-адреса**, что не имеет отношения к вебсайтам.
    **Websites**:
    Основное внимание уделяется:
        - **URL**
        - **никнеймам** (для идентификации сайта)
        - **электронной почте** (может быть как обязательной для регистрации, так и дополнительной)

### Что нужно учесть для унификации этих типов:

1. **Структура данных**:
    Убедитеся, что все важные данные для вебсайтов и сетевых подключений
    правильно отображены в модели (например, уникальность URL и IP-адресов).
   
2. **Логика бизнес-процессов**:
    Логика для добавления вебсайтов и сетевых подключений должна быть схожа,
    но с учетом этих отличий.
    Например:
    - для вебсайтов важно обрабатывать URL,
    - для сетевых подключений важно обрабатывать IP-адреса

3. **Функции в базе данных**:
    Функция для добавления вебсайта и подключения сетевого устройства в базе данных
    должна учитывать эти отличия.

    Например:
    проверка уникальности:
    - для вебсайта должна учитывать URL
    - для сетевых подключений должна учитывать IP

### Заключение:
В принципе, добавление вебсайтов и сетевых подключений можно сделать схожим,
но с небольшими различиями в обработке URL, IP и уникальности этих данных.

----------------------------------

24.07.2025.1.2:

Ошибка при добавлении вебсайта без создания новой почты:

2025-08-17T05:22:43.120516  0:00:00.011740 GET     [200] /network-connections?user_id=22
2025-08-17T05:24:46.095055975Z 📥 Получены данные: {"network_connection_name":"home","nickname":"aliceRor","raw_password":"homePass","network_connection_email":null,"raw_email_password":null,"ipv4":"10.10.10.10","ipv6":"2221:0db8:85a3:0000:0000:8a2e:0370:7334","network_connection_description":"Подключение Home","account_id":22,"user_id":null,"category_id":3,"email_description":null}
2025-08-17T05:24:46.100356983Z 📩 Автоматически выбрана почта: alice100@mail.ru
2025-08-17T05:24:46.399187462Z 2025-08-17T05:24:46.094077  0:00:00.304749 POST    [200] /network-connections/add2
2025-08-17T05:24:46.576397865Z 2025-08-17T05:24:46.570552  0:00:00.005581 GET     [200] /network-connections?user_id=22
2025-08-17T05:24:57.275691593Z 2025-08-17T05:24:57.272202  0:00:00.003124 GET     [200] /websites?user_id=22
2025-08-17T05:26:30.376511123Z 📥 Получены данные: {"website_name":"CSGo","website_url":"https://www.counter-strike.net/home?l=russian","nickname":"AliceCSGO","raw_password":"csgoPass","website_email":null,"raw_email_password":null,"website_description":"Сайт CSGO с почтой от аккаунта","account_id":22,"user_id":22,"category_id":2,"email_description":null}
2025-08-17T05:26:30.382424261Z 📩 Автоматически выбрана почта: alice100@mail.ru
2025-08-17T05:26:30.423583092Z ❌ Ошибка при добавлении вебсайта: Severity.unknown 42702: неоднозначная ссылка на столбец "nickname_id" detail: Подразумевается ссылка на переменную PL/pgSQL или столбец таблицы.
2025-08-17T05:26:30.423626169Z package:postgres/src/v3/connection.dart 862                  _PgResultStreamSubscription.handleError
2025-08-17T05:26:30.423634449Z package:postgres/src/v3/connection.dart 494                  PgConnectionImplementation._handleMessage
2025-08-17T05:26:30.423642199Z dart:async/zone.dart 1778                                    _RootZone.runUnaryGuarded
2025-08-17T05:26:30.423649843Z dart:async/stream_impl.dart 381                              _BufferingStreamSubscription._sendData
2025-08-17T05:26:30.423657748Z dart:async/stream_impl.dart 312                              _BufferingStreamSubscription._add
2025-08-17T05:26:30.423665440Z dart:async/stream_controller.dart 798                        _SyncStreamControllerDispatch._sendData
2025-08-17T05:26:30.423673094Z dart:async/stream_controller.dart 663                        _StreamController._add
2025-08-17T05:26:30.423683825Z dart:async/stream_controller.dart 618                        _StreamController.add
2025-08-17T05:26:30.423761679Z dart:async/stream.dart 823                                   Stream.asyncMap.<fn>.add
2025-08-17T05:26:30.423778826Z dart:async/stream_impl.dart 215                              _BufferingStreamSubscription.resume
2025-08-17T05:26:30.423786414Z ===== asynchronous gap ===========================
2025-08-17T05:26:30.423793671Z package:postgres/src/v3/connection.dart 764                  new _PgResultStreamSubscription
2025-08-17T05:26:30.423801265Z package:postgres/src/v3/connection.dart 732                  _BoundStatement.listen
2025-08-17T05:26:30.423808752Z package:postgres/src/v3/connection.dart 681                  _PreparedStatement.run
2025-08-17T05:26:30.423816202Z package:postgres/src/v3/connection.dart 173                  _PgSessionBase.execute
2025-08-17T05:26:30.423888015Z package:password_manager_server/api/website_routes.dart 304  WebsiteRoutes._addNewWebsiteWithoutCreatingANewEmail
2025-08-17T05:26:30.423904433Z package:shelf_router/src/router_entry.dart 107               RouterEntry.invoke.<fn>
2025-08-17T05:26:30.423910365Z package:shelf_router/src/router_entry.dart 104               RouterEntry.invoke
2025-08-17T05:26:30.423915908Z package:shelf_router/src/router.dart 184                     Router.call
2025-08-17T05:26:30.423922809Z package:common_utility_package/base_auth_middleware.dart 53  baseAuthMiddleware.<fn>.<fn>
2025-08-17T05:26:30.423928949Z package:shelf_router/src/router_entry.dart 107               RouterEntry.invoke.<fn>
2025-08-17T05:26:30.423934539Z package:shelf_router/src/router_entry.dart 104               RouterEntry.invoke
2025-08-17T05:26:30.423939978Z package:shelf_router/src/router.dart 184                     Router.call
2025-08-17T05:26:30.423945388Z package:shelf/src/middleware/logger.dart 30                  logRequests.<fn>.<fn>.<fn>
2025-08-17T05:26:30.423951342Z package:shelf/shelf_io.dart 140                              handleRequest
2025-08-17T05:26:30.423956753Z ===== asynchronous gap ===========================
2025-08-17T05:26:30.423997992Z package:postgres/src/v3/connection.dart 187                  _PgSessionBase._prepare
2025-08-17T05:26:30.424013578Z package:postgres/src/v3/connection.dart 171                  _PgSessionBase.execute
2025-08-17T05:26:30.424019840Z package:password_manager_server/api/website_routes.dart 304  WebsiteRoutes._addNewWebsiteWithoutCreatingANewEmail
2025-08-17T05:26:30.424025677Z package:shelf_router/src/router_entry.dart 107               RouterEntry.invoke.<fn>
2025-08-17T05:26:30.424031496Z package:shelf_router/src/router_entry.dart 104               RouterEntry.invoke
2025-08-17T05:26:30.424037055Z package:shelf_router/src/router.dart 184                     Router.call
2025-08-17T05:26:30.424042596Z package:common_utility_package/base_auth_middleware.dart 53  baseAuthMiddleware.<fn>.<fn>
2025-08-17T05:26:30.424048528Z package:shelf_router/src/router_entry.dart 107               RouterEntry.invoke.<fn>
2025-08-17T05:26:30.424054260Z package:shelf_router/src/router_entry.dart 104               RouterEntry.invoke
2025-08-17T05:26:30.424059823Z package:shelf_router/src/router.dart 184                     Router.call
2025-08-17T05:26:30.424065527Z package:shelf/src/middleware/logger.dart 30                  logRequests.<fn>.<fn>.<fn>
2025-08-17T05:26:30.424071659Z package:shelf/shelf_io.dart 140                              handleRequest
2025-08-17T05:26:30.424077191Z 
2025-08-17T05:26:30.424082359Z 2025-08-17T05:26:30.375790  0:00:00.047568 POST    [500] /websites/add2


При создании нового Сетевого подключения без создания почты создается хорошо,
а вот создание нового Вебсайта без создания новой почты происходит ошибка.

Функция create_website_with_nickname_email_and_url исправлена на:

-- PostgreSQL function to create a website with nickname, email, and URL
-- This function checks for existing nicknames and emails, creates them if necessary,
CREATE OR REPLACE FUNCTION public.create_website_with_nickname_email_and_url(
  p_account_id                  BIGINT,
  p_user_id                     BIGINT,
  p_category_id                 BIGINT,
  p_nickname                    TEXT,
  p_encrypted_password          TEXT,
  p_website_name                VARCHAR,
  p_website_url                 VARCHAR,
  p_website_description         TEXT DEFAULT NULL,
  p_email_address               TEXT DEFAULT NULL,
  p_email_encrypted_password    TEXT DEFAULT NULL,
  p_email_description           TEXT DEFAULT NULL
)
RETURNS BIGINT
LANGUAGE plpgsql
AS $function$
DECLARE
  v_nickname_id    BIGINT; -- Переименовано, чтобы избежать конфликта
  v_email_id       BIGINT; -- Переименовано
  new_website_id   BIGINT;
BEGIN
  -- ========== 1. Никнейм ==========
  IF p_nickname IS NULL OR LENGTH(TRIM(p_nickname)) = 0 THEN
    RAISE EXCEPTION 'Никнейм не может быть пустым';
  END IF;

  SELECT id INTO v_nickname_id
  FROM nicknames
  WHERE nickname = p_nickname;

  IF v_nickname_id IS NULL THEN
    INSERT INTO nicknames (nickname, account_id, user_id)
    VALUES (p_nickname, p_account_id, p_user_id)
    RETURNING id INTO v_nickname_id;
  END IF;

  INSERT INTO user_nicknames (user_id, nickname_id)
  VALUES (p_user_id, v_nickname_id)
  ON CONFLICT DO NOTHING;

  -- ========== 2. Email ==========
  IF p_email_address IS NULL OR LENGTH(TRIM(p_email_address)) = 0 THEN
    SELECT email_address INTO p_email_address
    FROM emails
    WHERE account_id = p_account_id
    ORDER BY created_at ASC
    LIMIT 1;
  END IF;

  IF p_email_address IS NOT NULL AND LENGTH(TRIM(p_email_address)) > 0 THEN
    SELECT id INTO v_email_id
    FROM emails
    WHERE email_address = p_email_address
    LIMIT 1;

    IF v_email_id IS NULL THEN
      INSERT INTO emails (
        email_address,
        encrypted_password,
        account_id,
        user_id,
        category_id,
        email_description
      )
      VALUES (
        p_email_address,
        COALESCE(p_email_encrypted_password, ''),
        p_account_id,
        p_user_id,
        3,
        COALESCE(p_email_description, 'Добавлено при создании вебсайта')
      )
      RETURNING id INTO v_email_id;
    END IF;

    INSERT INTO user_emails (user_id, email_id)
    VALUES (p_user_id, v_email_id)
    ON CONFLICT DO NOTHING;
  ELSE
    v_email_id := NULL;
  END IF;

  -- ========== 3. Проверка уникальности ==========
  IF EXISTS (
    SELECT 1 FROM websites w
    WHERE w.user_id = p_user_id
      AND w.nickname_id = v_nickname_id -- Используем переименованную переменную
      AND ((w.email_id = v_email_id) OR (w.email_id IS NULL AND v_email_id IS NULL))
      AND w.website_url = p_website_url
  ) THEN
    RAISE EXCEPTION 'Такой сайт уже добавлен с этим никнеймом и почтой';
  END IF;

  -- ========== 4. Сохранение вебсайта ==========
  INSERT INTO websites (
    account_id,
    category_id,
    encrypted_password,
    website_name,
    website_url,
    website_description,
    user_id,
    nickname_id,
    email_id
  )
  VALUES (
    p_account_id,
    p_category_id,
    p_encrypted_password,
    p_website_name,
    p_website_url,
    p_website_description,
    p_user_id,
    v_nickname_id, -- Используем переименованную переменную
    v_email_id -- Используем переименованную переменную
  )
  RETURNING id INTO new_website_id;

  RETURN new_website_id;
END;
$function$;


BUGS: 24.07.2025.002.1.2 - ✅ Решено 17.08.2025

====================================================================

BUGS: 24.07.2025.002.2:
2. Отсутствие иконки глазика для отображения пароля:
   Описание:
   В тестах Дашеньки было отмечено, что в полях для ввода пароля не хватает иконки глазика,
   которая бы позволяла пользователю видеть введенный текст.
   Это улучшило бы удобство использования, особенно в случае с длинными паролями.
   
   Решение:
   Добавить иконку для отображения/скрытия пароля в формах для ввода паролей:
    - Форма "регистрации"
    - Форма "авторизации"
    - Форма добавления "Новой почты"
    - Форма добавления "Нового сетевого подключения"
    - Форма добавления "Нового вебсайта"

Для реализации иконки "глазика" для отображения/скрытия пароля в формах,
был создан виджета "ПоляВводаПароляСИконкой" (PasswordField)
добавлен во все необходимые формы:
    - Форма "регистрации"
    - Форма "авторизации"
    - Форма добавления "Новой почты"
    - Форма добавления "Нового сетевого подключения"
    - Форма добавления "Нового вебсайта"

BUGS: 24.07.2025.002.2 - ✅ Решено 17.08.2025

====================================================================

BUGS: 24.07.2025.002.3.1:
В разделе "Network Connections" отсутствуют поля "никнейм" и "email_encrypted_password":
     Описание:
     В "network_connections_tab" отсутствуют поля:
     - "никнейм" - для указания никнейма пользователя
     - "email_encrypted_password" - для вывода зашифрованного пароля от почты
     что должно быть доступно для обеспечения безопасности.
  
     Решение:
     Добавить в раздел недостающие поля для корректного отображения и использования данных.

BUGS: 24.07.2025.002.3.2:
В разделе "Websites" отсутствуют поля "никнейм" и "email_encrypted_password":
     Описание:
     В "websites_tab" отсутствуют поля:
     - "никнейм" - для указания никнейма пользователя
     - "email_encrypted_password" - для вывода зашифрованного пароля от почты
     что должно быть доступно для обеспечения безопасности.
  
     Решение:
     Добавить в раздел недостающие поля для корректного отображения и использования данных.

Решение:
1. Изменить порядок отображения полей данных
2. Логин переименован в Никнейм
3. Не использовать пароль email (email_encrypted_password) получается избыточность данных.
