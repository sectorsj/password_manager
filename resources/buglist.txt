BUGS:
1. таблица emails:
- не сохраняются данные в поле encrypted_password
  // нужно чтобы в поле encrypted_password сохранялся зашифрованный пароль от сервера
  - пароль сохраняется в зашифрованном виде от сервера
2. таблица websites:
- не сохраняются данные в поле website_email
  TODO не обязательно чтобы в таблице было это поле,
      нужно, что бы в WebsitesTab получилось отобразить строкой адрес электронной почты созданного сайта,
      а не Id электронной почты
- не сохраняются данные в поле email_id
  TODO не обязательно чтобы в таблице было это поле,
      нужно, что бы в WebsitesTab получилось отобразить строкой адрес электронной почты созданного сайта,
      а не Id электронной почты
3. таблица network_connections:
- не сохраняются данные в поле email_id
  TODO не обязательно чтобы в таблице было это поле,
      нужно, что бы в NetworkConnectionsTab получилось отобразить строкой адрес электронной почты созданного подключения,
      а не Id электронной почты


02.07.25 BUGS:
1. таблица websites:
- не сохраняются данные в поле website_email:
  TODO не обязательно чтобы в таблице было это поле,
      нужно, что бы в WebsitesTab получилось отобразить строкой адрес электронной почты созданного сайта,
      а не Id электронной почты
- не сохраняются данные в поле email_id
  TODO не обязательно чтобы в таблице было это поле,
      нужно, что бы в WebsitesTab получилось отобразить строкой адрес электронной почты созданного сайта,
      а не Id электронной почты
2. таблица network_connections:
- не сохраняются данные в поле email_id
  TODO не обязательно чтобы в таблице было это поле,
      нужно, что бы в NetworkConnectionsTab получилось отобразить строкой адрес электронной почты созданного подключения,
      а не Id электронной почты

04.07.25 BUGS:
1. при создании аккаунта, в таблице emails поле email_description - null
  TODO в функцию (регистрации) create_account_with_user_nickname_and_email в поле email_description
      добавить значение по умолчанию "Почта созданная при регистрации аккаунта"
2. при создании аккаунта, в таблице emails поле category_id - null
  TODO в функцию (регистрации) create_account_with_user_nickname_and_email в поле category_id
      добавить значение по умолчанию 2, что соответствует categories.id = 2 - это "почты"
3. при создании нового сетевого подключения, в таблице emails поле category_id - null
  TODO в функцию (добавление нового подключения) create_network_connection_with_nickname_and_email в поле category_id
      добавить значение по умолчанию 3, что соответствует categories.id = 3 - это "сетевые подключения"
4. при создании нового вебсайта, в таблице emails поле category_id - null
  TODO в функцию (добавление нового вебсайта) create_website_with_nickname_and_email в поле category_id
      добавить значение по умолчанию 1, что соответствует categories.id = 1 - это "веб-сайты"


06.07.25: v0.0.2 alpha-тест:
Евгений Сафонов:
при создании нового "сайта" можно ввести пароль от почты,
без указания самой почты.
вернее даже нужно ввести пароль, а почту не нужно.
при создании нового "подключения" то же самое.

07.07.25: v.0.0.2 alpha-тест:
Дашенька
при создании аккаунта в поле:
- секретная фраза 
не хватает глазика, для удобства что пишешь

07.07.25: v.0.0.2 alpha-тест:
SectorSj
В network_connections_tab:
отсутствуют поля "никнейм", которые есть при их создании

В websites_tab:
отсутствует поле email_encrypted_password (пароль почты)

Уточнить поля (возможно уже устранено, перепроверь в коде)


07.07.25: v.0.0.2 alpha-тест:
SectorSj
При создании аккаунта секретная фраза не должна быть в виде звёздочек... Она должна полностью отображаться.

24.07.25 BUGS:
баги, выявленные в ходе alpha-теста приложения:

1. Отсутствие почты при вводе пароля в "Сайтах" и "Подключениях":
   Описание:
   В разделе "сайты" и "подключения" в приложении необходимо вводить только пароль,
   при этом поле для ввода почты отсутствует или не обязательно для заполнения.
   Это вызывает недоразумения, так как пароли должны быть привязаны к конкретным почтовым адресам.

   Решение:
   Обеспечить обязательное поле для ввода почты в соответствующих разделах,
   если это необходимо для функционала.

2. Отсутствие иконки глазика для отображения пароля:
   Описание:
   В тестах Дашеньки было отмечено, что в полях для ввода пароля не хватает иконки глазика,
   которая бы позволяла пользователю видеть введенный текст.
   Это улучшило бы удобство использования, особенно в случае с длинными паролями.
   
   Решение:
   Добавить иконку для отображения/скрытия пароля в формах для ввода паролей.

3. Отсутствие поля "никнейм" и "email_encrypted_password" в разделах "Network Connections" и "Websites":
   Описание:
   В разделе "network_connections_tab" отсутствует поле "никнейм", которое было указано при создании записи.
   Также в "websites_tab" нет поля для ввода зашифрованного пароля от почты ("email_encrypted_password"),
   что должно быть доступно для обеспечения безопасности.

   Решение:
   Добавить в оба раздела недостающие поля для корректного отображения и использования данных.

4. Секретная фраза не должна отображаться звездочками:
   Описание:
   При создании аккаунта секретная фраза отображается как звезды, что не соответствует предполагаемому поведению.
   Секретная фраза должна быть видимой для пользователя, чтобы он мог её проверять.

   Решение:
   Изменить отображение поля секретной фразы, чтобы она показывалась в исходном виде.

Эти баги требуют исправлений в коде, чтобы улучшить пользовательский интерфейс и взаимодействие с приложением.


24.07.2025.1.1:
Отсутствие "обязательности" у поля "эл. почта", при том,
что поле "пароль эл почты" (обязательное) при создании "Сетевого Подключения":

Описание:
При создании нового "подключения" необходимо вводить:
- название подключения
- ник пользователя
- пароль сетевого подключения
- пароль электронной почты

Решение:
Обеспечить необходимы обязательные поля для создания нового сетевого подключения.

1. Название подключения: обязательное поле
Название подключения — это важная информация для пользователя,
чтобы он мог идентифицировать подключение среди других.
Это обязательно, и здесь все ясно.

2. Никнейм пользователя
Если nickname не задан, будет использоваться username.
Если username не задан, будет использоваться accountLogin.
Это логично для автозаполнения,
так как каждый из этих параметров представляет собой имя пользователя
на разных уровнях (никнейм, имя пользователя, логин).

3. IP-адреса (IPv4, IPv6)
Здесь три варианта:
Только IPv4.
Только IPv6.
IPv4 и IPv6.
Это гибкость для разных типов подключения, и важно обеспечить выбор,
чтобы пользователь мог настроить подключение в зависимости от доступных параметров.

4. Пароль сетевого подключения: обязательное поле
Пароль для подключения к сети необходим для обеспечения безопасности,
и это обязательное поле.

5. Почта (email)
Добавление checkbox "добавить новую почту":
Если checkbox включен, становятся доступными поля для ввода эл. почты и пароля эл. почты.
Если checkbox не включен, привязывается почта, указанная при создании аккаунта.
Логика выбора почты в зависимости от состояния checkbox дает гибкость пользователю,
позволяя как добавить новый email, так и использовать существующий.

6. Пароль электронной почты
Этот параметр работает только тогда, когда заполняется поле эл. почты.
Это важно для безопасности, так как пароль будет требоваться только в случае
использования новой почты для подключения.

7. Описание подключения: не обязательное поле
Это поле будет полезным для дополнительных пояснений.
Например, для определения типа подключения или других параметров.
Оно не обязательно, но полезно для организации данных.

------------------------------------------------------

Бизнес-логика:
1.Название подключения: обязательное поле
2.Никнейм пользователя: задать вопрос пользователю (при создании сетевого подключения):
    - если nickname не задан,
           задать nickname из username,
    - если username не задан,
           задать username из accountLogin.
3. IP-адреса (IPv4, IPv6): есть 3 варианта:
    Либо ipv4 без ipv6
    Либо ipv6 без ipv4
    Либо ipv4 и ipv6
4. Пароль сетевого подключения: обязательное поле
5. Checkbox "довить новую почту"
    Включен:
        - Электронная почта (email): указывается адрес новой эл. почты
        - Пароль эл почты: указывается новой пароль эл. почты
    НЕ включен:
        - Электронная почта (email): привязывается почта, указанная при создании аккаунта
        - Пароль почты: привязывается пароль почты, указанная при создании аккаунта
6. Описание подключения: не обязательное поле

Что нужно сделать на практике:
Форма для создания сетевого подключения:

Для каждого из полей обеспечим корректную валидацию:
- Название подключения: обязательное поле
- Никнейм:              задать автоматически, если не введен
- IP-адреса:            три варианта с радиокнопками
- Пароль подключения:   обязательное поле
- Эл. почта:            добавление нового email с чекбоксом
- Пароль почты:         зависит от того, заполнено ли поле почты
- Описание:             не обязательное

Логика формы:

Для почты и пароля почты включим скрытие/отображение полей
в зависимости от состояния чекбокса.

Привязка почты из аккаунта, если чекбокс не активен.

Интерфейс пользователя:
Обеспечить понятный UI с четкими подсказками для каждого из полей.
Например, сделать все обязательные поля с явными метками и проверками.

----------------------------------------
Обсуждение логики с помощью функци созадния нового сетевого подключения через БД.
(create_network_connection_with_nickname_and_email):

1. Никнейм пользователя:
Процедура уже обрабатывает создание и привязку никнейма.
Она проверяет, существует ли никнейм в базе данных, и если его нет — создает новый.
Это соответствует требованию, что если nickname не задан, то нужно задать его через username или accountLogin.

Что нужно изменить:

Мы можем добавить дополнительную логику для определения nickname,
если его не передали в параметры функции
(например, использовать p_username или p_accountLogin, если p_nickname пустое).

2. Email (почта):
Процедура проверяет, существует ли уже заданный email.

Если его нет, она добавляет новый в таблицу emails и привязывает его к пользователю через таблицу user_emails.
Это соответствует бизнес-логике, где почта может быть как новой, так и связанной с уже существующим аккаунтом.

Что нужно изменить:

Логика добавления нового email уже присутствует.

Однако нужно удостовериться, что если checkbox для добавления новой почты не выбран,
то можно привязать существующий email из аккаунта.

Это может потребовать добавления логики, которая будет использовать email,
привязанный к аккаунту пользователя
(например, если p_email_address пустое, привязать почту из аккаунта).

3. Пароль сетевого подключения и почтовый пароль:
Пароль подключения передается через параметр p_encrypted_password,
а для почты — через p_email_encrypted_password.
Оба этих пароля передаются в таблицы network_connections и emails.

Что нужно изменить:

Логика с паролем уже предусмотрена.
Однако важно уточнить, что если email не задан,
то пароль для почты не должен передаваться в таблицу emails.

4. IP-адреса (IPv4, IPv6):
Процедура уже поддерживает оба типа IP-адресов — IPv4 и IPv6.

Что нужно изменить:

В коде можно уточнить логику, чтобы не передавать пустые значения для IP-адресов, если они не указаны.
Возможно, стоит добавить дополнительную проверку на корректность формата IP-адресов.

5. Описание подключения:
Процедура также поддерживает передачу описания подключения через параметр p_network_connection_description.


Полный код обновленной процедуры `create_network_connection_with_nickname_email_and_ip`
с учетом всех изменений и дополнений:

CREATE OR REPLACE FUNCTION public.create_network_connection_with_nickname_email_and_ip(
    p_account_id bigint,                                            -- Идентификатор аккаунта для создания подключения
    p_user_id bigint,                                               -- Идентификатор пользователя для создания подключения
    p_category_id bigint,                                           -- Идентификатор категории для создания подключения
    p_nickname text,                                                -- Никнейм пользователя, который будет привязан к подключению
    p_encrypted_password text,                                      -- Зашифрованный пароль для сетевого подключения
    p_network_connection_name character varying,                    -- Название нового сетевого подключения
    p_ipv4 character varying DEFAULT NULL::character varying,       -- IP-адрес для подключения (IPv4)
    p_ipv6 character varying DEFAULT NULL::character varying,       -- IP-адрес для подключения (IPv6)
    p_network_connection_description text DEFAULT NULL::text,       -- Описание нового подключения
    p_email_address text DEFAULT NULL::text,                        -- Адрес почтового аккаунта (электронной почты)
    p_email_encrypted_password text DEFAULT NULL::text,             -- Пароль почтового аккаунта
    p_email_description text DEFAULT NULL::text                     -- Описание почтового аккаунта
)
RETURNS bigint
LANGUAGE plpgsql
AS $function$
-- Объявление локальных переменных
DECLARE
    nickname_id       BIGINT;   -- Для хранения идентификатора никнейма
    email_id          BIGINT;   -- Для хранения идентификатора почты
    new_connection_id BIGINT;   -- Для хранения идентификатора нового сетевого подключения
BEGIN
    -- 1. Никнейм (проверка и создание):
    -- Если p_nickname не задано (NULL или пустое), то:
        -- Проверяется наличие p_username (имя пользователя)
    -- Если оно есть, то p_nickname будет равно p_username
    -- Если p_username также не задано, то используется p_account_login (логин аккаунта)
    -- для заполнения p_nickname

    IF p_nickname IS NULL OR LENGTH(TRIM(p_nickname)) = 0 THEN
        IF p_username IS NOT NULL AND LENGTH(TRIM(p_username)) > 0 THEN
            p_nickname := p_username;
        ELSE
            p_nickname := p_account_login;  -- Если username не задан, используем accountLogin
        END IF;
    END IF;

    -- Проверка и добавление никнейма в таблицу:
        -- Производится поиск по таблице nicknames на наличие уже существующего nickname
        -- Если такой никнейм не найден, он добавляется в таблицу nicknames с привязкой к account_id и user_id.
        -- Возвращается id созданного/найденного никнейма и сохраняется в переменную nickname_id.

    SELECT id INTO nickname_id FROM nicknames WHERE nickname = p_nickname;
    IF nickname_id IS NULL THEN
        INSERT INTO nicknames (nickname, account_id, user_id)
        VALUES (p_nickname, p_account_id, p_user_id)
        RETURNING id INTO nickname_id;
    END IF;

    --  Привязка никнейма к пользователю:
        -- После того как nickname_id получен, он добавляется в таблицу user_nicknames
            -- для связывания никнейма с пользователем
        -- Если такое связывание уже существует, чтобы избежать ошибок
            -- Используется конструкция ON CONFLICT DO NOTHING
    
    INSERT INTO user_nicknames (user_id, nickname_id)
    VALUES (p_user_id, nickname_id)
    ON CONFLICT DO NOTHING;

    -- 2. Email
    -- Проверка и привязка email:
    -- Если p_email_address не передано или пустое, тогда процедура пытается привязать email
        -- который был указан при создании аккаунта (по p_account_id)

    IF p_email_address IS NULL OR LENGTH(TRIM(p_email_address)) = 0 THEN
        -- Привязать email, указанный при создании аккаунта (например, привязка к p_account_id)
        SELECT email_address INTO p_email_address FROM emails WHERE account_id = p_account_id LIMIT 1;
    END IF;


    --  Добавление нового email:
        -- Если email_address передано и оно не пустое, то сначала выполняется поиск по таблице emails
            -- чтобы проверить, существует ли уже такой email
        -- Если email не найден, создается новый запись в таблице emails с переданным:
            -- email_address
            -- p_email_encrypted_password
            -- и другими данными
        -- Возвращается id нового email, который сохраняется в переменную email_id

    IF p_email_address IS NOT NULL AND LENGTH(TRIM(p_email_address)) > 0 THEN
        SELECT id INTO email_id FROM emails WHERE email_address = p_email_address;
        IF email_id IS NULL THEN
            INSERT INTO emails (
                email_address,
                encrypted_password,
                account_id,
                user_id,
                category_id,
                email_description
            )
            VALUES (
                p_email_address,
                COALESCE(p_email_encrypted_password, ''),
                p_account_id,
                p_user_id,
                3,
                'почта создана при создании нового сетевого подключения'
            )
            RETURNING id INTO email_id;
        END IF;


        -- Привязка email к пользователю:
            -- Добавляется запись в таблицу user_emails для связывания email с пользователем
            -- Используется конструкция ON CONFLICT DO NOTHING
                -- для предотвращения дублирования

        INSERT INTO user_emails (user_id, email_id)
        VALUES (p_user_id, email_id)
        ON CONFLICT DO NOTHING;
    END IF;

    -- 3. Подключение
    -- Обработка IP-адресов
    -- Проверяются переданные IP-адреса
        -- Если они пустые или NULL, то они заменяются на NULL в переменных p_ipv4 и p_ipv6
    IF p_ipv4 IS NULL OR LENGTH(TRIM(p_ipv4)) = 0 THEN
        p_ipv4 := NULL;
    END IF;
    IF p_ipv6 IS NULL OR LENGTH(TRIM(p_ipv6)) = 0 THEN
        p_ipv6 := NULL;
    END IF;

    INSERT INTO network_connections (
        account_id,
        category_id,
        encrypted_password,
        network_connection_name,
        ipv4,
        ipv6,
        network_connection_description,
        user_id,
        nickname_id,
        email_id
    )
    VALUES (
        p_account_id,
        p_category_id,
        p_encrypted_password,
        p_network_connection_name,
        p_ipv4,
        p_ipv6,
        p_network_connection_description,
        p_user_id,
        nickname_id,
        email_id
    )
    RETURNING id INTO new_connection_id;

    RETURN new_connection_id;
END;
$function$;


Изменения и дополнения:

1. Никнейм:
   Проверяем
        Если p_nickname не передан или пуст,
        То пытаемся задать его через:
            - p_username
            или
            - p_account_login.

2. Email:
   - Обновлена логика для использования email,привязанного к аккаунту.
   Если p_email_address не задан.
   - При наличии email_address, процедура проверяет,
        существует ли такой email в базе данных и добавляет его, если он отсутствует.

3. Пароль почты:
   - Если email_address не задан, пароль почты не передается.
   - Если email_address задан, то передается и p_email_encrypted_password.

4. IP-адреса:
   - Логика для обработки IPv4 и IPv6:
   Если эти значения не заданы или пустые, они присваиваются `NULL`.

5. Описание подключения:
   - Поле p_network_connection_description остается необязательным, и передается как есть.

---

Теперь эта процедура должна корректно обрабатывать создание сетевого подключения,
следуя требованиям из бизнес-логики, включая обработку:
- никнейма
- email
- пароля почты
- IP-адресов:
            - ipv4
            - ipv6

