import '../models/website.dart';
import 'base_service.dart';

class WebsiteService extends BaseService {
  // ‚úÖ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –≤–µ–±—Å–∞–π—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<List<Website>> getWebsitesByUser(int userId) async {
    final jsonData = await get('/websites?user_id=$userId');
    return (jsonData as List).map((item) => Website.fromJson(item)).toList();
  }

  // ‚úÖ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –≤–µ–±—Å–∞–π—Ç
  // üîÑ –æ—Ç–∫—Ä—ã—Ç—ã–π –ø–∞—Ä–æ–ª—å —à–∏—Ñ—Ä—É–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
  Future<String> addWebsite(Website website) async {
    final jsonBody = {
      'website_name': website.websiteName,
      'website_url': website.websiteUrl,
      'nickname': website.nickname,
      'raw_password': website.rawPassword,
      // –ø–∞—Ä–æ–ª—å –≤–µ–±—Å–∞–π—Ç–∞ –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ
      'website_email': website.websiteEmail,
      'raw_email_password': website.rawEmailPassword,
      // –ø–∞—Ä–æ–ª—å –æ—Ç –ø–æ—á—Ç—ã –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ
      'website_description': website.websiteDescription,
      'account_id': website.accountId,
      'user_id': website.userId,
      'category_id': website.categoryId,
    };

    await post('/websites/add', jsonBody);
    return '–í–µ–±—Å–∞–π—Ç –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ';
  }

  // ‚úÖ –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –ø–æ ID –≤–µ–±—Å–∞–π—Ç–∞
  Future<String> getDecryptedPassword(int id) async {
    final response = await get('/websites/$id/password');
    if (response is Map && response.containsKey('decrypted_password')) {
      return response['decrypted_password'];
    } else {
      throw Exception('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è');
    }
  }

  /// –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –æ—Ç email
  Future<String> getDecryptedEmailPassword(int id) async {
    final response = await get('/websites/$id/email-password');
    if (response is Map && response.containsKey('decrypted_email_password')) {
      return response['decrypted_email_password'];
    } else {
      throw Exception('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ email-–ø–∞—Ä–æ–ª—è');
    }
  }
}
