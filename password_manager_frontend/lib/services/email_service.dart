import 'package:password_manager_frontend/models/email.dart';
import 'package:password_manager_frontend/services/base_service.dart';

class EmailService extends BaseService {
  // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ Email –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<List<Email>> getEmails(int userId) async {
    final jsonData = await get('/emails?user_id=$userId');
    return (jsonData as List).map((item) => Email.fromJson(item)).toList();
  }

  // –î–æ–±–∞–≤–∏—Ç—å Email
  Future<String> addEmail(Email email) async {
    final jsonBody = {
      'email_address': email.emailAddress,
      'email_description': email.emailDescription,
      'raw_password': email.rawPassword, // üîë –Ω–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
      'account_id': email.accountId,
      'category_id': email.categoryId,
      'user_id': email.userId,
    };

    await post('/emails/add', jsonBody);
    print('‚ö†Ô∏è –ö–æ–Ω—Ç—Ä–æ–ª—å: –ü–æ—á—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ $jsonBody');
    return '–ü–æ—á—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ';
  }

  Future<String> getDecryptedPassword(int id) async {
    final response = await get('/emails/$id/password');
    if (response is Map && response.containsKey('decrypted_password')) {
      return response['decrypted_password'];
    } else {
      throw Exception('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è');
    }
  }
}
